{"version":3,"file":"main.js","mappings":"mBAEe,MAAMA,EACjBC,WAAAA,CAAYC,EAASC,GACjBC,KAAKC,SAAWH,EAChBE,KAAKD,KAAOA,EACZ,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAOA,EAAMG,IAAK,CAClC,MAAMC,EAAOC,SAASC,cAAc,OACpCF,EAAKG,UAAUC,IAAI,aACnBT,EAAQU,YAAYL,EACxB,CAEAH,KAAKS,YAAcT,KAAKS,YAAYC,KAAKV,MACzCA,KAAKC,SAASU,iBAAiB,QAASX,KAAKS,aAC7CT,KAAKY,UACT,CAEAC,UAAAA,GAUI,GARKb,KAAKc,eACNd,KAAKe,aAGTf,KAAKc,eAAgB,EAErBd,KAAKgB,UAAU,SAAUhB,KAAKiB,OAAS,MAAQjB,KAAKe,YAE5B,IAApBf,KAAKe,WAEL,YADAf,KAAKkB,WAIT,IAAIC,GAAY,EAChB,GACIA,EAAWC,KAAKC,MAAMD,KAAKE,SAAWtB,KAAKD,KAAOC,KAAKD,YAClDoB,IAAanB,KAAKuB,YAE3BvB,KAAKwB,MAAMxB,KAAKuB,YAAYjB,UAAUmB,OAAO,cAC7CzB,KAAKwB,MAAML,GAAUb,UAAUC,IAAI,cACnCP,KAAKuB,WAAaJ,CACtB,CAEAV,WAAAA,CAAYiB,GAEW,SAAf1B,KAAK2B,MACDD,EAAGE,OAAOtB,UAAUuB,SAAS,gBAC7B7B,KAAKiB,SACLjB,KAAKc,eAAgB,GAEH,aAAfd,KAAK2B,OACZ3B,KAAKY,UAEb,CAEAA,QAAAA,GACIZ,KAAKiB,OAAS,EACdjB,KAAKe,WAAa,EAClBf,KAAKc,eAAgB,EAErBd,KAAKgB,UAAU,WAAY,IAC3BhB,KAAKgB,UAAU,OAAQ,IACvBhB,KAAKgB,UAAU,SAAUhB,KAAKiB,OAAS,MAAQjB,KAAKe,YAEpD,MAAMI,EAAWC,KAAKC,MAAMD,KAAKE,SAAWtB,KAAKD,KAAOC,KAAKD,MAC7DC,KAAKwB,MAAQpB,SAAS0B,iBAAiB,cACvC9B,KAAKwB,MAAML,GAAUb,UAAUC,IAAI,cACnCP,KAAKuB,WAAaJ,EAElBnB,KAAK+B,WAAaC,aAAY,KAC1BhC,KAAKa,YAAY,GAClB,KACHb,KAAK2B,MAAQ,MACjB,CAEAT,QAAAA,GACIlB,KAAKgB,UAAU,WAAY,aAC3BhB,KAAKgB,UAAU,OAAQ,4BAEvBiB,cAAcjC,KAAK+B,YACnB/B,KAAKwB,MAAMxB,KAAKuB,YAAYjB,UAAUmB,OAAO,cAC7CzB,KAAKuB,YAAc,EACnBvB,KAAK2B,MAAQ,UACjB,CAEAX,SAAAA,CAAUkB,EAAeC,GACN/B,SAASgC,cAAc,IAAMF,GACrCG,YAAcF,CACzB,ECpFJ/B,SAASO,iBAAiB,oBAAoB,KAC3B,IAAIf,EAAWQ,SAASgC,cAAc,gBAAiB,EAAE,G","sources":["webpack://env/./src/js/game-widget.js","webpack://env/./src/js/app.js"],"sourcesContent":["\"use strict\";\n\nexport default class GameWidget {\n    constructor(element, size) {\n        this._element = element;\n        this.size = size\n        for (let i = 0; i < size * size; i++) {\n            const item = document.createElement('div');\n            item.classList.add('cell-item');\n            element.appendChild(item);\n        }\n\n        this.onItemClick = this.onItemClick.bind(this);\n        this._element.addEventListener('click', this.onItemClick);\n        this.gameInit();\n    }\n\n    moveGoblin() {\n\n        if (!this.successfulHit) {\n            this.lostPoints++;\n        }\n\n        this.successfulHit = false;\n\n        this.setHeader('points', this.points + ' : ' + this.lostPoints);\n\n        if (this.lostPoints === 5) {\n            this.gameOver();\n            return;\n        }\n\n        let position = -1;\n        do {\n            position = Math.floor(Math.random() * this.size * this.size);\n        } while (position === this.goblinFace);\n\n        this.cells[this.goblinFace].classList.remove('goblinFace');\n        this.cells[position].classList.add('goblinFace');\n        this.goblinFace = position;\n    }\n\n    onItemClick(el) {\n\n        if (this.state === 'game') {\n            if (el.target.classList.contains(\"goblinFace\")) {\n                this.points++;\n                this.successfulHit = true;\n            }\n        } else if (this.state === 'gameOver') {\n            this.gameInit();\n        }\n    }\n\n    gameInit() {\n        this.points = 0;\n        this.lostPoints = 0;\n        this.successfulHit = false;\n\n        this.setHeader('gameOver', '');\n        this.setHeader('info', '');\n        this.setHeader('points', this.points + ' : ' + this.lostPoints);\n\n        const position = Math.floor(Math.random() * this.size * this.size);\n        this.cells = document.querySelectorAll('.cell-item');\n        this.cells[position].classList.add('goblinFace');\n        this.goblinFace = position;\n\n        this.intervalId = setInterval(() => {\n            this.moveGoblin()\n        }, 1000);\n        this.state = \"game\";\n    }\n\n    gameOver() {\n        this.setHeader('gameOver', 'GAME OVER');\n        this.setHeader('info', 'click any field to start');\n\n        clearInterval(this.intervalId);\n        this.cells[this.goblinFace].classList.remove('goblinFace');\n        this.goblinFace = -1;\n        this.state = \"gameOver\";\n    }\n\n    setHeader(requiredClass, requiredText) {\n        const points = document.querySelector('.' + requiredClass);\n        points.textContent = requiredText;        \n    }\n}","import '../css/style.css';\nimport GameWidget from './game-widget.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const widget = new GameWidget(document.querySelector('.game-widget'), 4);\n})\n\n\n"],"names":["GameWidget","constructor","element","size","this","_element","i","item","document","createElement","classList","add","appendChild","onItemClick","bind","addEventListener","gameInit","moveGoblin","successfulHit","lostPoints","setHeader","points","gameOver","position","Math","floor","random","goblinFace","cells","remove","el","state","target","contains","querySelectorAll","intervalId","setInterval","clearInterval","requiredClass","requiredText","querySelector","textContent"],"sourceRoot":""}